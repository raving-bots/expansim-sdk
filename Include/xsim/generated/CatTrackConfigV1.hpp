// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "CatBrakeDataV1.hpp"
#include "CatPlateDataV1.hpp"
#include "CatSegmentArrayV1.hpp"
#include "CatShapeDataV1.hpp"
#include "CatTrackSuspensionDataV1.hpp"

namespace xsim
{
	struct CatTrackConfigV1 final
	{
		constexpr CatTrackConfigV1() = default;
		constexpr CatTrackConfigV1(const CatTrackConfigV1&) = default;
		constexpr CatTrackConfigV1(CatTrackConfigV1&&) = default;
		~CatTrackConfigV1() = default;
		constexpr CatTrackConfigV1& operator=(const CatTrackConfigV1&) = default;
		constexpr CatTrackConfigV1& operator=(CatTrackConfigV1&&) = default;

		::xsim::Entity m_VehicleEntity{};
		::xsim::Boolean<uint8_t> m_Precomputed{};
		::xsim::CatShapeDataV1 m_Shape{};
		::xsim::CatPlateDataV1 m_Plate{};
		::xsim::CatBrakeDataV1 m_Brake{};
		::xsim::CatTrackSuspensionDataV1 m_Suspension{};
		::xsim::CatSegmentArrayV1 m_Segments{};
		uint8_t m_SoundPresetId{};
		uint8_t m_FxPresetId{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::CatTrackConfigV1>::value,
	"SDK bug: TypeStruct CatTrackConfigV1 not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::CatTrackConfigV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::CatTrackConfigV1& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("CatTrackConfigV1"));
		}
	};
}
