// Copyright Raving Bots 2018-2020
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "Angle.hpp"
#include "LinearForce.hpp"
#include "SafeId.hpp"
#include "SurfaceData.hpp"

namespace xsim
{
	struct ShapeContact final
	{
		constexpr ShapeContact() = default;
		constexpr ShapeContact(const ShapeContact&) = default;
		constexpr ShapeContact(ShapeContact&&) = default;
		~ShapeContact() = default;
		constexpr ShapeContact& operator=(const ShapeContact&) = default;
		constexpr ShapeContact& operator=(ShapeContact&&) = default;

		::xsim::Vector3F m_Offset{};
		::xsim::Vector3F m_HitPoint{};
		::xsim::Vector3F m_SurfacePoint{};
		::xsim::Vector3F m_Right{};
		::xsim::Vector3F m_Up{};
		::xsim::Vector3F m_Forward{};
		::xsim::Vector3F m_Camber{};
		::xsim::Vector3F m_Caster{};
		::xsim::Angle m_CamberAngle{};
		::xsim::Angle m_CasterAngle{};
		::xsim::Vector2F m_Velocity{};
		float m_VelocityLength{};
		::xsim::LinearForce m_VerticalForce{};
		::xsim::SurfaceData m_Surface{};
		float m_Vibration{};
		::xsim::SafeId m_RigidbodyId{};
		::xsim::Vector3F m_RigidbodyVerticalForce{};
		::xsim::Vector3F m_RigidbodyVelocity{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::ShapeContact>::value,
	"SDK bug: TypeStruct ShapeContact not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::ShapeContact, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::ShapeContact& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("ShapeContact"));
		}
	};
}
