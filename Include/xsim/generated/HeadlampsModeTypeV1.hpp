// Copyright Raving Bots 2018-2020
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

namespace xsim
{
	enum class HeadlampsModeTypeV1 : int32_t
	{
		None = INT32_C(0),
		Position = INT32_C(1),
		Beam = INT32_C(2)
	};
}

static_assert(
	std::is_standard_layout<::xsim::HeadlampsModeTypeV1>::value,
	"SDK bug: TypeEnum HeadlampsModeTypeV1 not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::HeadlampsModeTypeV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::HeadlampsModeTypeV1& value, FormatContext& ctx)
		{
			switch (value)
			{
				case ::xsim::HeadlampsModeTypeV1::None:
				{
					return format_to(ctx.out(), XSIM_FMT_LITERAL("HeadlampsModeTypeV1(None)"));
				}
				case ::xsim::HeadlampsModeTypeV1::Position:
				{
					return format_to(ctx.out(), XSIM_FMT_LITERAL("HeadlampsModeTypeV1(Position)"));
				}
				case ::xsim::HeadlampsModeTypeV1::Beam:
				{
					return format_to(ctx.out(), XSIM_FMT_LITERAL("HeadlampsModeTypeV1(Beam)"));
				}
				default:
				{
					return format_to(ctx.out(), XSIM_FMT_LITERAL("HeadlampsModeTypeV1({})"), static_cast<uintmax_t>(value));
				}
			}
		}
	};
}
