// Copyright Raving Bots 2018-2020
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

namespace xsim
{
	struct AutoShiftCond final
	{
		constexpr AutoShiftCond() = default;
		constexpr AutoShiftCond(const AutoShiftCond&) = default;
		constexpr AutoShiftCond(AutoShiftCond&&) = default;
		~AutoShiftCond() = default;
		constexpr AutoShiftCond& operator=(const AutoShiftCond&) = default;
		constexpr AutoShiftCond& operator=(AutoShiftCond&&) = default;

		float m_State{};
		int32_t m_ShiftSum{};
		int32_t m_SampleCount{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::AutoShiftCond>::value,
	"SDK bug: TypeStruct AutoShiftCond not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::AutoShiftCond, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::AutoShiftCond& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("AutoShiftCond"));
		}
	};
}
