// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "WheelBrakeDataV1.hpp"
#include "WheelSatDataV1.hpp"
#include "WheelShapeDataV1.hpp"
#include "WheelSuspensionDataV1.hpp"
#include "WheelTireDataV1.hpp"

namespace xsim
{
	struct WheelConfigV1 final
	{
		constexpr WheelConfigV1() = default;
		constexpr WheelConfigV1(const WheelConfigV1&) = default;
		constexpr WheelConfigV1(WheelConfigV1&&) = default;
		~WheelConfigV1() = default;
		constexpr WheelConfigV1& operator=(const WheelConfigV1&) = default;
		constexpr WheelConfigV1& operator=(WheelConfigV1&&) = default;

		::xsim::Entity m_VehicleEntity{};
		::xsim::Entity m_OppositeEntity{};
		::xsim::Boolean<uint8_t> m_Precomputed{};
		::xsim::WheelShapeDataV1 m_Shape{};
		::xsim::WheelTireDataV1 m_Tire{};
		::xsim::WheelSatDataV1 m_Sat{};
		::xsim::WheelBrakeDataV1 m_Brake{};
		::xsim::WheelSuspensionDataV1 m_Suspension{};
		uint8_t m_SoundPresetId{};
		uint8_t m_FxPresetId{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::WheelConfigV1>::value,
	"SDK bug: TypeStruct WheelConfigV1 not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::WheelConfigV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::WheelConfigV1& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("WheelConfigV1"));
		}
	};
}
