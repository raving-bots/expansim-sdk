// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "PneumaticDoorStateArray.hpp"

namespace xsim
{
	struct PneumaticsState final
	{
		constexpr PneumaticsState() = default;
		constexpr PneumaticsState(const PneumaticsState&) = default;
		constexpr PneumaticsState(PneumaticsState&&) = default;
		~PneumaticsState() = default;
		constexpr PneumaticsState& operator=(const PneumaticsState&) = default;
		constexpr PneumaticsState& operator=(PneumaticsState&&) = default;

		int32_t m_DataGeneration{};
		::xsim::PneumaticDoorStateArray m_Doors{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::PneumaticsState>::value,
	"SDK bug: TypeStruct PneumaticsState not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::PneumaticsState, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::PneumaticsState& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("PneumaticsState"));
		}
	};
}
