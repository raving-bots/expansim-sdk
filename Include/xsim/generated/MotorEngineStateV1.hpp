// Copyright Raving Bots 2018-2020
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "AngularForceV1.hpp"
#include "BatteryConsumptionDataV1.hpp"
#include "CombustionEngineStateV1.hpp"
#include "ElectricEngineStateV1.hpp"
#include "EngineStateV1.hpp"
#include "FuelConsumptionDataV1.hpp"
#include "PowerV1.hpp"
#include "RpmV1.hpp"

namespace xsim
{
	struct MotorEngineStateV1 final
	{
		constexpr MotorEngineStateV1() = default;
		constexpr MotorEngineStateV1(const MotorEngineStateV1&) = default;
		constexpr MotorEngineStateV1(MotorEngineStateV1&&) = default;
		~MotorEngineStateV1() = default;
		constexpr MotorEngineStateV1& operator=(const MotorEngineStateV1&) = default;
		constexpr MotorEngineStateV1& operator=(MotorEngineStateV1&&) = default;

		::xsim::EngineStateV1 m_EngineState{};
		::xsim::RpmV1 m_Rpm{};
		float m_RpmNorm{};
		::xsim::AngularForceV1 m_Torque{};
		::xsim::PowerV1 m_Power{};
		float m_Load{};
		::xsim::FuelConsumptionDataV1 m_FuelConsumption{};
		::xsim::BatteryConsumptionDataV1 m_BatteryConsumption{};
		::xsim::CombustionEngineStateV1 m_CombustionEngine{};
		::xsim::ElectricEngineStateV1 m_ElectricEngine{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::MotorEngineStateV1>::value,
	"SDK bug: TypeStruct MotorEngineStateV1 not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::MotorEngineStateV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::MotorEngineStateV1& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("MotorEngineStateV1"));
		}
	};
}
