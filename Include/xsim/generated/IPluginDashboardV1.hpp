// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "DashboardConfigV1.hpp"
#include "DashboardStateV1.hpp"
#include "ElectricsStateV1.hpp"
#include "ElectronicsStateV1.hpp"
#include "ManifoldStateV1.hpp"
#include "MotorEngineStateV1.hpp"
#include "PneumaticsStateV1.hpp"
#include "TransmissionConfigV1.hpp"
#include "TransmissionStateV1.hpp"
#include "VehicleApiDataV1.hpp"
#include "VehicleConfigV1.hpp"
#include "VehicleControllerDataV1.hpp"
#include "VehicleStateV1.hpp"

namespace xsim
{
	struct IPluginDashboardV1
	{
		virtual void OnDashboard(
			float dt,
			::xsim::Ptr<const ::xsim::VehicleApiDataV1> api,
			::xsim::Ptr<const ::xsim::VehicleControllerDataV1> vehicleController,
			::xsim::Ptr<const ::xsim::VehicleConfigV1> vehicleConfig,
			::xsim::Ptr<::xsim::VehicleStateV1> vehicleState,
			::xsim::Ptr<const ::xsim::DashboardConfigV1> dashboardConfig,
			::xsim::Ptr<::xsim::DashboardStateV1> dashboardState,
			::xsim::Ptr<const ::xsim::MotorEngineStateV1> motorEngineState,
			::xsim::Ptr<const ::xsim::TransmissionConfigV1> transmissionConfig,
			::xsim::Ptr<const ::xsim::TransmissionStateV1> transmissionState,
			::xsim::Ptr<const ::xsim::ManifoldStateV1> manifoldState,
			::xsim::Boolean<int32_t> hasElectrics,
			::xsim::Ptr<const ::xsim::ElectricsStateV1> electricsState,
			::xsim::Boolean<int32_t> hasElectronics,
			::xsim::Ptr<const ::xsim::ElectronicsStateV1> electronicsState,
			::xsim::Boolean<int32_t> hasPneumatics,
			::xsim::Ptr<const ::xsim::PneumaticsStateV1> pneumaticsState
		) noexcept = 0;
	};


	template <>
	struct InterfaceTraits<::xsim::IPluginDashboardV1>
	{
		constexpr static const wchar_t* Name = L"IPluginDashboardV1";
		constexpr static bool IsFrozen = true;
		constexpr static bool IsSystem = false;
		constexpr static uint64_t Checksum = UINT64_C(10266749892264056645);
	};
}

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::IPluginDashboardV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::IPluginDashboardV1& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("IPluginDashboardV1"));
		}
	};
}
