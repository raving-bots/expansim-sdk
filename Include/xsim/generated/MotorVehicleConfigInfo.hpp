// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "CatTrackConfig.hpp"
#include "MirrorsConfig.hpp"
#include "MotorEngineConfig.hpp"
#include "TransmissionConfig.hpp"
#include "VehicleConfigInfo.hpp"

namespace xsim
{
	struct MotorVehicleConfigInfo final
	{
		constexpr MotorVehicleConfigInfo() = default;
		constexpr MotorVehicleConfigInfo(const MotorVehicleConfigInfo&) = default;
		constexpr MotorVehicleConfigInfo(MotorVehicleConfigInfo&&) = default;
		~MotorVehicleConfigInfo() = default;
		constexpr MotorVehicleConfigInfo& operator=(const MotorVehicleConfigInfo&) = default;
		constexpr MotorVehicleConfigInfo& operator=(MotorVehicleConfigInfo&&) = default;

		::xsim::VehicleConfigInfo m_Vehicle{};
		::xsim::CatTrackConfig m_FrontTracks{};
		::xsim::CatTrackConfig m_RearTracks{};
		::xsim::MirrorsConfig m_Mirrors{};
		::xsim::MotorEngineConfig m_Engine{};
		::xsim::TransmissionConfig m_Transmission{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::MotorVehicleConfigInfo>::value,
	"SDK bug: TypeStruct MotorVehicleConfigInfo not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::MotorVehicleConfigInfo, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::MotorVehicleConfigInfo& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("MotorVehicleConfigInfo"));
		}
	};
}
