// Copyright Raving Bots 2018-2020
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "Angle.hpp"

namespace xsim
{
	struct ContactSlip final
	{
		constexpr ContactSlip() = default;
		constexpr ContactSlip(const ContactSlip&) = default;
		constexpr ContactSlip(ContactSlip&&) = default;
		~ContactSlip() = default;
		constexpr ContactSlip& operator=(const ContactSlip&) = default;
		constexpr ContactSlip& operator=(ContactSlip&&) = default;

		::xsim::Vector2F m_Velocity{};
		float m_Ratio{};
		::xsim::Angle m_Angle{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::ContactSlip>::value,
	"SDK bug: TypeStruct ContactSlip not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::ContactSlip, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::ContactSlip& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("ContactSlip"));
		}
	};
}
