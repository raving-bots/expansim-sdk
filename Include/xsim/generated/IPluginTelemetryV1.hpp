// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

#include "BodyContactDataV1.hpp"
#include "BodyInterpDataV1.hpp"
#include "BodyTelemetryDataV1.hpp"
#include "BodyTransformDataV1.hpp"
#include "CameraStateV1.hpp"
#include "VehicleApiDataV1.hpp"
#include "VehicleConfigV1.hpp"
#include "VehicleStateV1.hpp"

namespace xsim
{
	struct IPluginTelemetryV1
	{
		virtual void OnTelemetry(
			float dt,
			::xsim::Ptr<const ::xsim::VehicleApiDataV1> api,
			::xsim::Ptr<const ::xsim::VehicleConfigV1> vehicleConfig,
			::xsim::Ptr<const ::xsim::VehicleStateV1> vehicleState,
			::xsim::Ptr<const ::xsim::BodyTransformDataV1> bodyTransformData,
			::xsim::Ptr<const ::xsim::BodyInterpDataV1> bodyInterpData,
			::xsim::Ptr<const ::xsim::BodyTelemetryDataV1> bodyTelemetryData,
			::xsim::Ptr<const ::xsim::BodyContactDataV1> bodyContactData,
			::xsim::Boolean<int32_t> hasCamera,
			::xsim::Ptr<const ::xsim::CameraStateV1> cameraState,
			::xsim::Boolean<int32_t> hasCabin,
			::xsim::Ptr<const ::xsim::BodyTransformDataV1> cabinTransformData,
			::xsim::Ptr<const ::xsim::BodyInterpDataV1> cabinInterpData,
			::xsim::Ptr<const ::xsim::BodyTelemetryDataV1> cabinTelemetryData,
			::xsim::Ptr<const ::xsim::BodyContactDataV1> cabinContactData,
			::xsim::Boolean<int32_t> hasTurret,
			::xsim::Ptr<const ::xsim::BodyTransformDataV1> turretTransformData,
			::xsim::Ptr<const ::xsim::BodyInterpDataV1> turretInterpData,
			::xsim::Ptr<const ::xsim::BodyTelemetryDataV1> turretTelemetryData,
			::xsim::Ptr<const ::xsim::BodyContactDataV1> turretContactData
		) noexcept = 0;
	};


	template <>
	struct InterfaceTraits<::xsim::IPluginTelemetryV1>
	{
		constexpr static const wchar_t* Name = L"IPluginTelemetryV1";
		constexpr static bool IsFrozen = true;
		constexpr static bool IsSystem = false;
		constexpr static uint64_t Checksum = UINT64_C(7562624878820252848);
	};
}

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::IPluginTelemetryV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::IPluginTelemetryV1& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("IPluginTelemetryV1"));
		}
	};
}
