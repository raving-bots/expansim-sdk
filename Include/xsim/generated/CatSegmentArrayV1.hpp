// Copyright Raving Bots 2018-2021
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

namespace xsim
{
	struct CatSegmentArrayV1 final
	{
		constexpr CatSegmentArrayV1() = default;
		constexpr CatSegmentArrayV1(const CatSegmentArrayV1&) = default;
		constexpr CatSegmentArrayV1(CatSegmentArrayV1&&) = default;
		~CatSegmentArrayV1() = default;
		constexpr CatSegmentArrayV1& operator=(const CatSegmentArrayV1&) = default;
		constexpr CatSegmentArrayV1& operator=(CatSegmentArrayV1&&) = default;

		int32_t m_Count{};
		::xsim::Entity m_Entity0{};
		::xsim::Entity m_Entity1{};
		::xsim::Entity m_Entity2{};
		::xsim::Entity m_Entity3{};
		::xsim::Entity m_Entity4{};
		::xsim::Entity m_Entity5{};
		::xsim::Entity m_Entity6{};
		::xsim::Entity m_Entity7{};
		::xsim::Entity m_Entity8{};
		::xsim::Entity m_Entity9{};
		::xsim::Entity m_Entity10{};
		::xsim::Entity m_Entity11{};
		::xsim::Entity m_Entity12{};
		::xsim::Entity m_Entity13{};
		::xsim::Entity m_Entity14{};
		::xsim::Entity m_Entity15{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::CatSegmentArrayV1>::value,
	"SDK bug: TypeStruct CatSegmentArrayV1 not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::CatSegmentArrayV1, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::CatSegmentArrayV1& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("CatSegmentArrayV1"));
		}
	};
}
