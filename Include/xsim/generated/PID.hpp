// Copyright Raving Bots 2018-2020
//
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file SDK-LICENSE or copy at https://www.boost.org/LICENSE_1_0.txt)

// <auto-generated>
//     WARNING: This file has been generated automatically. Do not edit manually, changes will be lost.
// </auto-generated>

#pragma once

#include <xsim/types.hpp>

namespace xsim
{
	struct PID final
	{
		constexpr PID() = default;
		constexpr PID(const PID&) = default;
		constexpr PID(PID&&) = default;
		~PID() = default;
		constexpr PID& operator=(const PID&) = default;
		constexpr PID& operator=(PID&&) = default;

		::xsim::Vector3F m_Pid{};
		::xsim::Vector2F m_MinMax{};
		float m_Error{};
		float m_Integral{};
	};
}

static_assert(
	std::is_standard_layout<::xsim::PID>::value,
	"SDK bug: TypeStruct PID not standard layout"
);

namespace fmt
{
	template <typename Char>
	struct formatter<::xsim::PID, Char>
	{
		template <typename ParseContext>
		constexpr auto parse(ParseContext& ctx)
		{
			return ctx.begin();
		}

		template <typename FormatContext>
		auto format(const ::xsim::PID& value, FormatContext& ctx)
		{
			return format_to(ctx.out(), XSIM_FMT_LITERAL("PID"));
		}
	};
}
